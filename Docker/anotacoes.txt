## Instalação Docker - Descomplicando Docker LinuxTips
# su (e inserir sua senha)
# curl -fsSL https://get.docker.com/ | bash

## VERSÃO DOCKER
#docker version 

## Executar um container "hello-World"
# docker container run -ti hello-world

#Verificar container
#docker container ls
#docker container ls -a (trás todos containers) e os detalhes.

#explicação execução container
#docker container -ti (significa que o docker irá executar um container com terminal e interatividade)
#docker container -ti ubuntu (instala um container com uma imagem ubuntu)
#apos isso o terminal abre essa imagem e mostra root@"066041630"
# exit | sai do container | matar container
# sair do container sem matar ele | ctrl + p + q
#entrar novamente no container
#docker container attach +"id do container ou nome"
#docker container -d | executa o container como um daemon não como um -ti terminal de interatividade.

#executar container
#docker container -ti "+id container" bash (sem aspas, e o bash no final executa um terminal bash)
# Qual o comando que eu posso executar para visualizar todos os containers?: # docker container ls -a
# Qual o comando que eu posso executar para pausar determinado container?: # docker container pause [CONTAINER ID]
# Como eu posso sair do container sem mata-lo? : CTRL + p + q
# Qual comando eu utilizo para que seja executado determinado comando dentro do container?: # docker container exec -ti [CONTAINER ID] [COMANDO]
#docker container stop "+id container" (sem aspas)
#docker container start 
#docker container restart
#todos esses comandos acima deve inserir o container ir após o comando. para executar pausar etc
#docker container inspect "+idcontainer" (sem aspas) ele trás todas informaçoes do container.


# CONFIGURANDO CPU E MEMÓRIA  

#docker container stats (verificar quanto de recurso esse container está usando, memoria cpu etc)
#docker container inspect (inspecionar container, e pegar o ip )
#curl +IP (abrir a net, abre a pagina web)
# comando top (trás mais informações do container)
#stress --cpu --vmbytes 128 --vm 1 (simula um estresse na cpu, modifica os bytes, simula 1 vm.)

#docker container rm -f "+idcontainer"

#docker container run -d -m 128M ngnix (cria um container com 128 de memoria)
#docker container inspect cce (tras as 3 primeiras informações)













