## Instalação Docker - Descomplicando Docker LinuxTips
# su (e inserir sua senha)
# curl -fsSL https://get.docker.com/ | bash

## VERSÃO DOCKER
#docker version 

## Executar um container "hello-World"
# docker container run -ti hello-world

#Verificar container
#docker container ls
#docker container ls -a (trás todos containers) e os detalhes.

#explicação execução container
#docker container -ti (significa que o docker irá executar um container com terminal e interatividade)
#docker container -ti ubuntu (instala um container com uma imagem ubuntu)
#apos isso o terminal abre essa imagem e mostra root@"066041630"
# exit | sai do container | matar container
# sair do container sem matar ele | ctrl + p + q
#entrar novamente no container
#docker container attach +"id do container ou nome"
#docker container -d | executa o container como um daemon não como um -ti terminal de interatividade.

#executar container
#docker container -ti "+id container" bash (sem aspas, e o bash no final executa um terminal bash)
# Qual o comando que eu posso executar para visualizar todos os containers?: # docker container ls -a
# Qual o comando que eu posso executar para pausar determinado container?: # docker container pause [CONTAINER ID]
# Como eu posso sair do container sem mata-lo? : CTRL + p + q
# Qual comando eu utilizo para que seja executado determinado comando dentro do container?: # docker container exec -ti [CONTAINER ID] [COMANDO]
#docker container stop "+id container" (sem aspas)
#docker container start 
#docker container restart
#todos esses comandos acima deve inserir o container ir após o comando. para executar pausar etc
#docker container inspect "+idcontainer" (sem aspas) ele trás todas informaçoes do container.


# CONFIGURANDO CPU E MEMÓRIA  

#docker container stats (verificar quanto de recurso esse container está usando, memoria cpu etc)
#docker container inspect (inspecionar container, e pegar o ip )
#curl +IP (abrir a net, abre a pagina web)
# comando top (trás mais informações do container)
#stress --cpu --vmbytes 128 --vm 1 (simula um estresse na cpu, modifica os bytes, simula 1 vm.)

#docker container rm -f "+idcontainer"

#docker container run -d -m 128M ngnix (cria um container com 128 de memoria)
#docker container inspect cce (tras as 3 primeiras informações)



Qual o comando para listar as imagens que estão no host?
docker image ls
docker images
Qual o nome do arquivo onde adiciono informações sobre a imagem que irei buildar?
Dockerfile
Qual o comando utilizado para buildar (construir) uma imagem?
docker image build


final do dia 1


# Inicio dia 2

#montar imagem


#docker container /opt/giropoops (diretorio especifico)
é necessário fazer a gestao dos volumes no seu dockerfile
#docker container run -ti --mount type-bind,src=/opt/giropoops,dst=/giropoops debian (montando uma imagem em diretorio especifico) se colocar ro no final significa READ ONLY





#criar imagem do postegress

#dentro do diretorio
#docker container create -v /data --name dados centos
# docker container run -d -p 5432:5432 --name pgsql1 --volumes--from dbdados -e POSTEGRESQL_USER=docker -e POSTEGRESQL_PASS=docker -e POSTEGRESQL_DB=docker kamui/postgresql
# docker container run -d -p 5433:5432 --name pgsql2 --volumes--from dbdados -e POSTEGRESQL_USER=docker -e POSTEGRESQL_PASS=docker -e POSTEGRESQL_DB=docker kamui/postgresql


Resposta desafio #####

docker volume create dbdados
docker volume ls

docker container run -d -p 5432:5432 --name pgsql1 --mount type=volume,src=dbdados,dst=/data -e POSTEGRESQL_USER=docker -e POSTEGRESQL_PASS=docker -e POSTEGRESQL_DB=docker kamui/postgresql

docker container run -d -p 5433:5432 --name pgsql2 --mount type=volume,src=dbdados,dst=/data -e POSTEGRESQL_USER=docker -e POSTEGRESQL_PASS=docker -e POSTEGRESQL_DB=docker kamui/postgresql
docker volume ls 
docker volume inspect dbdados (inspeciona, e acessa diretorio)
#exemplo de backup
mkdir /opt/backup

subir o container e montar volume
docker container run -ti --mount type=volume,src=dbdados,dst=/data --mount type=bind,src=/opt/backup,dst=/backup debian tar -cvf  /backup/bkp-banco.tar /data (tar empacota em cvf)

Quando criamos um volume do tipo bind, quais os parâmetros para indicar onde o volume será montado no container?
dst
destination
Quando criamos um volume do tipo volume, quais os parâmetros para indicar o nome do volume que será montado no container?
source
src
É possível montar um volume como somente leitura em um container? SIM
Qual o parâmetro para montar um volume em um container como somente leitura?
ro
Quando o container é removido, o volume também será removido? NAO
Qual o comando para montar um volume do tipo volume em um container?
docker container run -d --mount type=volume,source=giropops,destination=/var/opa nginx
Qual o comando utilizado para criar um volume?
docker volume create giropops
Qual o comando para remover um volume?
docker volume rm giropops
Qual o comando utilizado para listar todos os volumes?
docker volume ls
Qual o comando utilizado para remover todos os volumes que não estão sendo utilizado por nenhum container?
docker volume prune
Qual o comando para montar um volume do tipo bind em um container?
docker container run -ti --mount type=bind,src=/root/primeiro_container,dst=/volume ubuntu
Qual o diretório no host onde ficam os volumes criados?
/var/lib/docker/volumes
Qual o comando utilizado para ver detalhes sobre um determinado volume?
docker volume inspect giropops

### docker file

FROM debian

RUN apt-get update && apt-get install -y apache2 && apt-get clean
ENV APACHE_LOCK_DIR="/var/lock"
ENV APACHE_PID_FILE="/var/run/apache2.pid"
ENV APACHE_RUN_USER="www-data"
ENV APACHE_RUN_GROUP="www-data"
ENV APACHE_LOG_DIR="/var/log/apache2"

LABEL description="Webserver"

VOLUME /var/www/html/
EXPOSE 80
 

FROM debian

RUN apt-get update && apt-get install -y apache2 && apt-get clean
ENV APACHE_LOCK_DIR="/var/lock"
ENV APACHE_PID_FILE="/var/run/apache2/apache2.pid"
ENV APACHE_RUN_USER="www-data"
ENV APACHE_RUN_DIR="/var/run/apache2"
ENV APACHE_RUN_GROUP="www-data"
ENV APACHE_LOG_DIR="/var/log/apache2"

LABEL description="Webserver"

VOLUME /var/www/html/
EXPOSE 80

ENTRYPOINT ["/usr/sbin/apachectl"]
CMD ["-D", "FOREGROUND"]
 

package main
import "fmt"

func main() {
	fmt.Println("GIROPOPS STRIGUS GIRUS - LINUXTIPS")
}
 

FROM golang

WORKDIR /app
ADD . /app
RUN go build -o goapp
ENTRYPOINT ./goapp
 

FROM golang AS buildando

ADD . /src
WORKDIR /src
RUN go build -o goapp


FROM alpine:3.1

WORKDIR /app
COPY --from=buildando /src/goapp /app
ENTRYPOINT ./goapp
 

ADD => Copia novos arquivos, diretórios, arquivos TAR ou arquivos remotos e os adicionam ao filesystem do container;

CMD => Executa um comando, diferente do RUN que executa o comando no momento em que está "buildando" a imagem, o CMD executa no início da execução do container;

LABEL => Adiciona metadados a imagem como versão, descrição e fabricante;

COPY => Copia novos arquivos e diretórios e os adicionam ao filesystem do container;

ENTRYPOINT => Permite você configurar um container para rodar um executável, e quando esse executável for finalizado, o container também será;

ENV => Informa variáveis de ambiente ao container;

EXPOSE => Informa qual porta o container estará ouvindo;

FROM => Indica qual imagem será utilizada como base, ela precisa ser a primeira linha do Dockerfile;

MAINTAINER => Autor da imagem; 

RUN => Executa qualquer comando em uma nova camada no topo da imagem e "commita" as alterações. Essas alterações você poderá utilizar nas próximas instruções de seu Dockerfile;

USER => Determina qual o usuário será utilizado na imagem. Por default é o root;

VOLUME => Permite a criação de um ponto de montagem no container;

WORKDIR => Responsável por mudar do diretório / (raiz) para o especificado nele;
 




Para que serve um Dockerfile?
Para criar uma imagem de container
Qual a finalidade da instrução FROM no Dockerfile?
Indicar a imagem base
Quais os comandos utilizados para "buildar" uma nova imagem?
docker build -t linuxtips/apache:1.0 .
docker image build -t linuxtips/apache:1.0 .
Quais instruções no Dockerfile adiciona uma arquivo?
ADD
COPY
Qual instrução no Dockerfile executa um comando no momento de criação da imagem?
RUN
Quais os comandos executam um comando na inicialização do container?
CMD
ENTRYPOINT
Qual instrução no Dockerfile indica o usuário que será utilizado no container?
USER
Qual instrução no Dockerfile indica que determinado diretório no container será um volume?
VOLUME
É possível ter duas instruções FROM dentro do mesmo Dockerfile?
Sim
Como eu posso adicionar um nome em um trecho do Dockerfile para referenciá-lo em outra parte do arquivo?
FROM debian AS giropops
Qual o comando utilizado para listar todas as imagens no host?
docker image ls
É possível criar uma imagem a partir de um container em execução?
Sim
Qual a finalidade do comando "docker commit"
Criar uma imagem a partir de um container em execução


# docker image inspect debian
# docker history linuxtips/apache:1.0
# docker login
# docker login registry.suaempresa.com
# docker push linuxtips/apache:1.0
# docker pull linuxtips/apache:1.0
# docker image ls
# docker container run -d -p 5000:5000 --restart=always --name registry registry:2
# docker tag IMAGEMID localhost:5000/apache






















